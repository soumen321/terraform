#!/usr/bin/python

import boto3
from botocore.exceptions import ClientError
from utils.logger import log    

cloudwatch = boto3.client('cloudwatch')
aws_region = "us-east-1"
client = boto3.client('sts')
account_id = client.get_caller_identity()['Account']

def put_metric_alarm(alarm_name, dimensions, cloudwatch_alarm=[],alarm_tags=[]):
    if cloudwatch_alarm:
        try:
            
            alarm_description = "Alarm Generated by CloudWatch Alarm Manager"
            if 'Description' in cloudwatch_alarm:
                alarm_description = cloudwatch_alarm['Description']
            
            response = cloudwatch.put_metric_alarm(
                    AlarmName=alarm_name,
                    AlarmDescription=alarm_description,
                    ActionsEnabled=True,
                    OKActions=[cloudwatch_alarm['OKActions']],
                    AlarmActions=[cloudwatch_alarm['AlarmActions']],
                    InsufficientDataActions=[cloudwatch_alarm['InsufficientDataActions']],
                    MetricName=cloudwatch_alarm['MetricName'],
                    Namespace=cloudwatch_alarm['Namespace'],
                    Statistic=cloudwatch_alarm['Statistic'],
                    Period=cloudwatch_alarm['Period'],
                    EvaluationPeriods=cloudwatch_alarm['EvaluationPeriods'],
                    Threshold=cloudwatch_alarm['Threshold'],
                    ComparisonOperator=cloudwatch_alarm['ComparisonOperator'],
                    Dimensions=dimensions,
                    TreatMissingData=cloudwatch_alarm['TreatMissingData'],
                    Tags=alarm_tags
            )
            if response['ResponseMetadata']['HTTPStatusCode'] == 200:
                log(2,"Alarm created: " + alarm_name)
                if alarm_tags:
                    arn_alarm = "arn:aws:cloudwatch:"+aws_region+":"+account_id+":alarm:" + alarm_name
                    
                    response = cloudwatch.tag_resource(
                        ResourceARN=arn_alarm,
                        Tags=alarm_tags
                    )
                    if response['ResponseMetadata']['HTTPStatusCode'] != 200:
                        log(0,"An error occur during creating tags for alarm: " + alarm_name)
                    
            else:
                log(0,"Error creating alarm 123: " + alarm_name)        
            
        except Exception as e:
            print("Error creating alarm: " + alarm_name)
            print(e)